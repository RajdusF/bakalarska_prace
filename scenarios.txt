ls
cd C:\Users\Administrator\Documents\bakalarska_prace\files\folder\second_folder
ls
cd C:\Users\Administrator\Documents\bakalarska_prace\files

filter name *.bnx -d
add *
filter name *.cmap -d
add *
filter name *.xmap -d
add *

filter added size < 90 MB
remove *
add *

filter *
files
added

#find "^#" in added

find "molecule" in added -I

finds = find "map" in added -I

variables

for key, listt in finds.items():
    if not isinstance(listt, list):
        continue
    for line in listt:
        if "Maps" not in line:
            continue
        for split in re.split(r"\s+", line):
            try:
                if int(split) > 50:
                    print(key)
                    print(line)
            except ValueError:
                pass

########################

ls
cd C:\Users\Administrator\Documents\bakalarska_prace\files\folder\second_folder
ls
cd C:\Users\Administrator\Documents\bakalarska_prace\files

filter name *.bnx -d
add *
filter name *.cmap -d
add *
filter name *.xmap -d
add *

names = [file.split("\\")[-1] for file in added]
print(names)

filter added size < 100 KB
remove *
add *

for file in files:
    for name in names:
        if name in file:
            print(file)


##########################


a = filter name *.bnx
b = filter name *.cmap
c = filter name *.xmap

all = a+b+c

variables

# C:\Users\Administrator\Documents\bakalarska_prace\files
# C:\Users\Filip\Documents\bakalarska_prace\files\all_cropped.bnx
f = load(C:\Users\Administrator\Documents\bakalarska_prace\files\all_cropped.bnx)


print(f)

for i, molecule in enumerate(f.molecules):
    if hasattr(molecule, "AvgIntensity"):
        if float(molecule.AvgIntensity) > 1500:
            print(molecule)
            write_line_based_on_file(f.name, str(molecule))
            print(f.molecules[i+1])
            print(f.molecules[i+2])
            print(f.molecules[i+3])

f = load(C:\Users\Administrator\Documents\bakalarska_prace\files\exp_refineFinal1_r_cropped.cmap)
print(f)



f = load(C:\Users\Administrator\Documents\bakalarska_prace\files\exp_refineFinal1_cropped.xmap)
print(f)

for i, molecule in enumerate(f.molecules):
    if hasattr(molecule, "Orientation"):
        if molecule.Orientation == "+" and i < 20:
            print(molecule)

for i, molecule in enumerate(f.molecules):
    if hasattr(molecule, "Orientation"):
        if molecule.Orientation == "-" and i < 20:
            print(molecule)



#########################

# count_to(200_000_000, False)
# count_to(200_000_000, False)
# count_to(200_000_000, False)


items = list(range(1, 20000))

# print(pfor_pool(return_list, items))

print(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
r = pfor_order(return_list, items)
print(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))

print(r)
# variables


print(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
r = pfor(return_list, items)
print(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))

print(r)

# r = pfor(return_list, items)


# find_44(items)
# find_44(items)
# find_44(items)
# pfor_pool(find_44, items)

# pfor(count_to, 200_000_000)

# for x in items:
#     if x == 440_00000:
#         print("Found 44!")
        
# print("Done searching!")


#######################


# prepared_files = ["C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_0.bnx", "C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_1.bnx", "C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_2.bnx","C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_3.bnx", "C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_4.bnx", "C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_5.bnx"]

# names = []

# for x in prepared_files:
#     names.append(x.split("\\")[-1][:-4] +".json")

# # prepared_files = "C:\\Users\\Filip\\Documents\\bakalarska_prace\\files\\small_all_5.bnx"

# results = pfor(load, prepared_files)

# print(results)

# results = pfor(save, results, names)

# print(results)

# print("Finished!")
